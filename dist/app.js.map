{
  "version": 3,
  "sources": ["../node_server/server_settings.js", "../node_modules/fragelement/DOMElement.js", "../src/components/component.js"],
  "sourcesContent": ["const settings = {\r\n    protocol:'http', //'http' or 'https'\r\n    host: 'localhost', //'localhost' or '127.0.0.1' etc.\r\n    port: 80, //e.g. port 80, 443, 8000\r\n    hotreload: 5000, //hotreload websocket server port\r\n    startpage: 'src/index.html',  //home page\r\n    errpage: 'src/other/404.html', //error page, etc.\r\n    sslpath:'node_server/ssl/cert.pfx',//if using https, this is required. See cert.pfx.md for instructions\r\n    socket: 7000  //quart server port\r\n}\r\n\r\nexports.settings = settings;", "\r\nexport class DOMElement extends HTMLElement { \r\n    template = (props) => {return `<div> Custom Fragment Props: ${JSON.stringify(props)} </div>`}; //override the default template string by extending the class, or use options.template if calling the base class\r\n    props = {test:true};\r\n    \r\n    oncreate=undefined //(props) => {}  fires on element creation (e.g. to set up logic)\r\n    onresize=undefined //(props) => {} fires on window resize\r\n    ondelete=undefined //(props) => {} fires after element is deleted\r\n    onchanged=undefined //(props) => {} fires when props change\r\n\r\n    fragment = undefined;\r\n    \r\n    static observedAttributes = [\"props\",\"options\",\"onchanged\",\"onresize\",\"ondelete\",\"oncreate\",\"template\"];\r\n\r\n    attributeChangedCallback(name, old, val) {\r\n        if(name === 'onchanged') {\r\n            let onchanged = val;\r\n            if(typeof onchanged === 'string') onchanged = parseFunctionFromText(onchanged);\r\n            if(typeof onchanged === 'function') { \r\n                this.onchanged =  onchanged;\r\n                this.state.data.props = this.props;\r\n                this.state.unsubscribeTrigger('props'); //remove any previous subs\r\n                this.state.subscribeTrigger('props',this.onchanged);\r\n                let changed = new CustomEvent('changed', {detail: { props:this.props }});\r\n                this.state.subscribeTrigger('props',()=>{this.dispatchEvent(changed)});\r\n            }\r\n        }\r\n        if(name === 'onresize') {\r\n            let onresize = val;\r\n            if(typeof onresize === 'string')  onresize = parseFunctionFromText(onresize);\r\n            if(typeof onresize === 'function') { \r\n                try {window.removeEventListener('resize',this.onresize);} catch(err) {}\r\n                this.onresize = onresize;\r\n                window.addEventListener('resize',this.onresize);\r\n            }\r\n        }\r\n        if(name === 'ondelete') {\r\n            let ondelete = val;\r\n            if(typeof ondelete === 'string') ondelete = parseFunctionFromText(ondelete);\r\n            if(typeof ondelete === 'function') { \r\n                this.ondelete = () => {\r\n                    window.removeEventListener('resize',this.onresize);\r\n                    this.state.unsubscribeTrigger('props');\r\n                    ondelete();\r\n                }\r\n            }\r\n        }\r\n        if(name === 'oncreate') { \r\n            let oncreate = val;\r\n            if(typeof oncreate === 'string') oncreate = parseFunctionFromText(oncreate);\r\n            if(typeof oncreate === 'function') { \r\n                this.oncreate =  oncreate;\r\n            }\r\n        }\r\n        if(name === 'props') { //update the props, fires any onchanged stuff\r\n            let newProps = val;\r\n            if(typeof newProps === 'string') newProps = JSON.parse(newProps);\r\n\r\n            Object.assign(this.props,newProps);\r\n            this.state.setState({props:this.props});\r\n        }\r\n        if(name === 'template') { //change the html template\r\n\r\n            let template = val;\r\n\r\n            this.template = options.template; //function or string;\r\n\r\n            if(typeof template === 'function') this.templateString = this.template(this.props); //can pass a function\r\n            else this.templateString = template;\r\n            \r\n            //render the new template\r\n            this.render(this.props);\r\n            let created = new CustomEvent('created', {detail: { props:this.props }});\r\n            this.dispatchEvent(created);\r\n\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        \r\n        let resizeevent = new CustomEvent('resized', {detail: { props:this.props }});\r\n        let changed = new CustomEvent('changed', {detail: { props:this.props }});\r\n        let deleted = new CustomEvent('deleted', {detail: { props:this.props }});\r\n        let created = new CustomEvent('created', {detail: { props:this.props }});\r\n        //now we can add event listeners for our custom events\r\n        \r\n        this.render(this.props);\r\n        this.dispatchEvent(created);\r\n\r\n        this.state.subscribeTrigger('props',()=>{this.dispatchEvent(changed)});\r\n\r\n        if(typeof this.onresize === 'function') {\r\n            window.addEventListener('resize',()=>{\r\n                this.onresize();\r\n                this.dispatchEvent(resizeevent);\r\n            });\r\n        }\r\n        \r\n        if(typeof this.ondelete === 'function') {\r\n            let ondelete = this.ondelete;\r\n            this.ondelete = () => {\r\n                window.removeEventListener('resize',this.onresize);\r\n                this.state.unsubscribeTrigger('props');\r\n                ondelete();\r\n                this.dispatchEvent(deleted);\r\n            }\r\n        }\r\n\r\n        if(typeof this.onchanged === 'function') {\r\n            this.state.data.props = this.props;\r\n            this.state.subscribeTrigger('props',this.onchanged);\r\n        }\r\n\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    get props() {\r\n        return this.props;\r\n    } \r\n\r\n    set props(newProps={}) {\r\n        this.setAttribute('props',newProps);\r\n    }\r\n\r\n    get template() {\r\n        return this.template;\r\n    } \r\n\r\n    set template(template) {\r\n        this.setAttribute('template',template);\r\n    }\r\n\r\n    get render() {\r\n        return this.render;\r\n    }\r\n\r\n    get delete() {\r\n        return this.delete;\r\n    }\r\n\r\n    get state() {\r\n        return this.state;\r\n    }\r\n\r\n    //past tense just so it can't conflict with onchange\r\n    get onchanged() {\r\n        return this.onchanged;\r\n    } \r\n\r\n    set onchanged(onchanged) {\r\n        this.setAttribute('onchanged',onchanged);\r\n    }\r\n\r\n    get onresize() {\r\n        return this.props;\r\n    } \r\n\r\n    set onresize(onresize) {\r\n        this.setAttribute('onresize',onresize);\r\n    }\r\n\r\n    get ondelete() {\r\n        return this.props;\r\n    } \r\n\r\n    set ondelete(ondelete) {\r\n        this.setAttribute('ondelete',ondelete);\r\n    }\r\n\r\n    get oncreate() {\r\n        return this.oncreate;\r\n    } \r\n\r\n    set oncreate(oncreate) {\r\n        this.setAttribute('oncreated',oncreate);\r\n    }\r\n\r\n\r\n    delete = () => { //deletes self from the DOM\r\n        this.fragment = undefined;\r\n        this.remove();\r\n        if(this.ondelete) this.ondelete(this.props);\r\n    };\r\n\r\n    render = (props=this.props) => {\r\n\r\n        if(typeof this.template === 'function') this.templateString = this.template(props); //can pass a function\r\n        else this.templateString = this.template;\r\n\r\n        //this.innerHTML = this.templateString;\r\n\r\n        const t = document.createElement('template');\r\n        t.innerHTML = this.templateString;\r\n        const fragment = t.content;\r\n        if(this.fragment) { //will reappend the fragment without reappending the whole node if already rendered once\r\n            this.removeChild(this.fragment); \r\n        }\r\n        this.fragment = fragment;\r\n        this.appendChild(fragment);\r\n        \r\n        if(this.oncreate) this.oncreate(props); //set scripted behaviors\r\n    }\r\n\r\n    state = {\r\n        pushToState:{},\r\n        data:{},\r\n        triggers:{},\r\n        setState(updateObj){\r\n            Object.assign(this.pushToState,updateObj);\r\n\r\n            if(Object.keys(this.triggers).length > 0) {\r\n                // Object.assign(this.data,this.pushToState);\r\n                for (const prop of Object.getOwnPropertyNames(this.triggers)) {\r\n                    if(this.pushToState[prop]) {\r\n                        this.data[prop] = this.pushToState[prop]\r\n                        delete this.pushToState[prop];\r\n                        this.triggers[prop].forEach((obj)=>{\r\n                            obj.onchanged(this.data[prop]);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            return this.pushToState;\r\n        },\r\n        subscribeTrigger(key,onchanged=(res)=>{}){\r\n            if(key) {\r\n                if(!this.triggers[key]) {\r\n                    this.triggers[key] = [];\r\n                }\r\n                let l = this.triggers[key].length;\r\n                this.triggers[key].push({idx:l, onchanged:onchanged});\r\n                return this.triggers[key].length-1;\r\n            } else return undefined;\r\n        },\r\n        unsubscribeTrigger(key,sub){\r\n            let idx = undefined;\r\n            let triggers = this.triggers[key]\r\n            if (triggers){\r\n                if(!sub) delete this.triggers[key];\r\n                else {\r\n                    let obj = triggers.find((o)=>{\r\n                        if(o.idx===sub) {return true;}\r\n                    });\r\n                    if(obj) triggers.splice(idx,1);\r\n                    return true;\r\n                }\r\n            }\r\n        },\r\n        subscribeTriggerOnce(key=undefined,onchanged=(value)=>{}) {\r\n            let sub;\r\n            let changed = (value) => {\r\n                onchanged(value);\r\n                this.unsubscribeTrigger(key,sub);\r\n            }\r\n\r\n            sub = this.subscribeTrigger(key,changed);\r\n        }\r\n    }\r\n}\r\n\r\n//extend the DOMElement class with an new name, this name determines the element name (always lower case in the html regardless of class name cases)\r\nexport function addCustomElement(cls, name, extend=null) {\r\n    if(extend) {\r\n        if(name) window.customElements.define(name, cls, {extends:extend});\r\n        else window.customElements.define(cls.name.toLowerCase()+'-',cls, {extends:extend});\r\n    }\r\n    else {\r\n        if(name) window.customElements.define(name, cls);\r\n        else window.customElements.define(cls.name.toLowerCase()+'-',cls);\r\n    }\r\n}\r\n\r\nexport function randomId(tag='') {\r\n    return tag+Math.floor(Math.random()*1000000000000000);\r\n}\r\n\r\n// Proper DOM fragment implementation which also creates customElements you can use like <so></so>. High HTML5 performance via template fragments\r\nexport function parseFunctionFromText(method) {\r\n    //Get the text inside of a function (regular or arrow);\r\n    let getFunctionBody = (methodString) => {\r\n    return methodString.replace(/^\\W*(function[^{]+\\{([\\s\\S]*)\\}|[^=]+=>[^{]*\\{([\\s\\S]*)\\}|[^=]+=>(.+))/i, '$2$3$4');\r\n    }\r\n\r\n    let getFunctionHead = (methodString) => {\r\n    let startindex = methodString.indexOf(')');\r\n    return methodString.slice(0, methodString.indexOf('{',startindex) + 1);\r\n    }\r\n\r\n    let newFuncHead = getFunctionHead(method);\r\n    let newFuncBody = getFunctionBody(method);\r\n\r\n    let newFunc;\r\n    if (newFuncHead.includes('function ')) {\r\n    let varName = newFuncHead.split('(')[1].split(')')[0]\r\n    newFunc = new Function(varName, newFuncBody);\r\n    } else {\r\n    if(newFuncHead.substring(0,6) === newFuncBody.substring(0,6)) {\r\n        //newFuncBody = newFuncBody.substring(newFuncHead.length);\r\n        let varName = newFuncHead.split('(')[1].split(')')[0]\r\n        //console.log(varName, newFuncHead ,newFuncBody);\r\n        newFunc = new Function(varName, newFuncBody.substring(newFuncBody.indexOf('{')+1,newFuncBody.length-1));\r\n    }\r\n    else newFunc = eval(newFuncHead + newFuncBody + \"}\");\r\n    }\r\n\r\n    return newFunc;\r\n\r\n}\r\n\r\n", "\r\nimport {DOMElement, addCustomElement} from 'fragelement';\r\nimport {settings} from '../../node_server/server_settings'\r\n\r\nlet component = require('./component.html');\r\n\r\n//See: https://github.com/brainsatplay/domelement\r\nexport class Custom extends DOMElement {\r\n    props={host:settings.host, port:settings.socket, ws:undefined} //can specify properties of the element which can be subscribed to for changes.\r\n    \r\n    //set the template string or function (which can input props to return a modified string)\r\n    template=component;\r\n\r\n    //DOMElement custom callbacks:\r\n    oncreate=(props)=>{\r\n        let host = 'localhost';\r\n        let port = 7000;\r\n\r\n        props.ws = new WebSocket('ws://' + props.host + ':' + props.port + '/'); //var ws = new WebSocket('ws://' + document.domain + ':' + location.port + '/');\r\n        props.ws.onmessage = function (event) {\r\n            const messagesDOM = document.getElementsByTagName('ul')[0];\r\n            const messageDOM = document.createElement('li');\r\n            //const message = JSON.parse(event.data).message;\r\n            const message = event.data;\r\n            const contentDOM = document.createTextNode(message);\r\n            messageDOM.appendChild(contentDOM);\r\n            messagesDOM.appendChild(messageDOM);\r\n        };\r\n    }\r\n    //onresize=(props)=>{} //on window resize\r\n    //onchanged=(props)=>{} //on props changed\r\n    ondelete=(props)=>{\r\n        props.ws.close();\r\n    } //on element deleted. Can remove with this.delete() which runs cleanup functions\r\n}\r\n\r\n//window.customElements.define('custom-', Custom);\r\n\r\naddCustomElement(Custom,'custom-');\r\n"],
  "mappings": "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",
  "names": []
}
